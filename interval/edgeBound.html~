<html><head><title>edgeBound Documentation</title></head>
<body><h1>
<a name="topofdoc"><img src="diag2min.gif">edgeBound</a></h1>
<dl>
<dd>
	A class of miscellaneous static functions.


</dl>
<hr><p></p>
<p><strong>[ 
<a href="kepler.html">kepler</a> | 
<a href="lineInterval.h">Source</a> | 
<a href="/keyweb.html">Keywords</a> | 
<a href="#aag">Summary</a> | <a href="#parents">Ancestors</a> | <a href="#flat">All Members</a> | <a href="#children">Descendants</a>  ]</strong><p>
<h2><a name="quickind">Quick Index</a></h2>
<dl>
<dd><a href="#OVERVIEW_TEXT">OVERVIEW TEXT</a>
<dd><a href="#AUTHOR">AUTHOR</a>
</dl>
<a name="aag"><hr><p></p></a><h2>Class Summary</h2>
class edgeBound<br>
<br>
 {
<br>
<br><i><b>public</b></i>:
<dl>
<dd><strong>static</strong> int <a href="edgeBound.html#int_shortDiagMax_(double_x0min,double_x0pmin,double_x1,double_x2,double_x3min,_double&amp_x3max,double_x4,double_x4p,double_x5,double_x5p)$">shortDiagMax</a> (double x0min,double x0pmin,double x1,double x2,double x3min, double&amp x3max,double x4,double x4p,double x5,double x5p);
<dd><strong>static</strong> int <a href="edgeBound.html#int_x4_upper_from_dih_upper(const_double_x[6],const_double_z[6],_double_dih_upper,_double&amp_new_x4_upper)$">x4_upper_from_dih_upper</a>(const double x[6],const double z[6], double dih_upper, double&amp new_x4_upper);
<dd><strong>static</strong> double <a href="edgeBound.html#double_chi234min(const_domain&amp,_const_domain&amp)$">chi234min</a>(const <a href="domain.html">domain</a>&amp, const <a href="domain.html">domain</a>&amp);
</dl>
<i><b>protected</b></i>:
<dl>
</dl>
}; // edgeBound <p>
<p>Back to the <a href="#topofdoc">top</a> of  <i>edgeBound</i><p>
<a name="OVERVIEW_TEXT"><hr><p></p></a><h3>OVERVIEW TEXT</h3>
<p>
	edgeBound contains a few functions that did not belong
	anywhere else.
<p>
<p>Back to the <a href="#topofdoc">top</a> of  <i>edgeBound</i><p>
<a name="AUTHOR"><hr><p></p></a><h3>AUTHOR</h3>
	Thomas C. Hales
<p>
<p>Back to the <a href="#topofdoc">top</a> of  <i>edgeBound</i><p>
<a name="int_shortDiagMax_(double_x0min,double_x0pmin,double_x1,double_x2,double_x3min,_double&amp_x3max,double_x4,double_x4p,double_x5,double_x5p)$"><hr><p></p><h3>int shortDiagMax (double x0min,double x0pmin,double x1,double x2,double x3min, double&amp x3max,double x4,double x4p,double x5,double x5p);</h3></a>
	   Computes the Maximum of the shorter
	   diagonal if possible, assuming that the shorter diagonal is
	   the one joining the two simplices A and B.
	   There are two simplices 
	     A = (x0min,x1,x2,x3,x4,x5), B=(x0pmin,x1,x2,x3,x4p,x5p);
	   They share vertices x1,x2,x3;
	   Assume edge3 is the shorter diagonal.  Compute an upper bound
	   on this shorter diagonal.
	   We assume that the edge length belongs to [x3min,x3max(inputvalue)]
	   A revised x3max(output) is set, with x3max(output)<=x3max(input).
<p>
<p><pre>
static int shortDiagMax
	(double x0min,double x0pmin,double x1,double x2,double x3min,
        double&amp x3max,double x4,double x4p,double x5,double x5p);
</pre>
<br><p>Back to the <a href="#topofdoc">top</a> of  <i> edgeBound </i> <p>
<a name="int_x4_upper_from_dih_upper(const_double_x[6],const_double_z[6],_double_dih_upper,_double&amp_new_x4_upper)$"><hr><p></p><h3>int x4_upper_from_dih_upper(const double x[6],const double z[6], double dih_upper, double&amp new_x4_upper);</h3></a>
	   given upper bound theta on dih, find corresponding upper bd on x4.
<p>
<p><pre>
static int <a href="#int_x4_upper_from_dih_upper(const_double_x[6],const_double_z[6],_double_dih_upper,_double&amp_new_x4_upper)$">x4_upper_from_dih_upper</a>(const double x[6],const double z[6],
		double dih_upper, double&amp new_x4_upper);
</pre>
<br><p>Back to the <a href="#topofdoc">top</a> of  <i> edgeBound </i> <p>
<a name="double_chi234min(const_domain&amp,_const_domain&amp)$"><hr><p></p><h3>double chi234min(const domain&amp, const domain&amp);</h3></a>
	   lower bound on chi234. This has only been implemented
	   when the face(2,3,4) is acute.
<p>
<p><pre>
static double <a href="#double_chi234min(const_domain&amp,_const_domain&amp)$">chi234min</a>(const <a href="domain.html">domain</a>&amp, const <a href="domain.html">domain</a>&amp); // for acute guys only
</pre>
<br><p>Back to the <a href="#topofdoc">top</a> of  <i> edgeBound </i> <p>
<a name="flat"><hr><p></p></a>
<h2>All Members</h2>
<dl>
<dt><strong>public:</strong>
<dd><strong>static</strong> int <a href="edgeBound.html#int_shortDiagMax_(double_x0min,double_x0pmin,double_x1,double_x2,double_x3min,_double&amp_x3max,double_x4,double_x4p,double_x5,double_x5p)$">shortDiagMax</a> (double x0min,double x0pmin,double x1,double x2,double x3min, double&amp x3max,double x4,double x4p,double x5,double x5p);
<dd><strong>static</strong> int <a href="edgeBound.html#int_x4_upper_from_dih_upper(const_double_x[6],const_double_z[6],_double_dih_upper,_double&amp_new_x4_upper)$">x4_upper_from_dih_upper</a>(const double x[6],const double z[6], double dih_upper, double&amp new_x4_upper);
<dd><strong>static</strong> double <a href="edgeBound.html#double_chi234min(const_domain&amp,_const_domain&amp)$">chi234min</a>(const <a href="domain.html">domain</a>&amp, const <a href="domain.html">domain</a>&amp);
<dt><strong>protected:</strong>
</dl>
<p>Back to the <a href="#topofdoc">top</a> of  edgeBound<p>
<a name="parents"><hr><p></p></a>
<h2>Ancestors</h2>
Class does not inherit from any other class.<p>
<p>Back to the <a href="#topofdoc">top</a> of  edgeBound<p>
<a name="children"><hr><p></p></a>
<h2>Descendants</h2>
Class is not inherited by any others.<p>
<p>Back to the <a href="#topofdoc">top</a> of  edgeBound<p>
<hr><p></p>
Generated from source by the <i><a href="http://www.cs.umn.edu/~kotula/cocoon/cocoon.htm">Cocoon</a></i> utilities on Mon Dec 22 19:37:23 1997
.<p>
<address>Report <a href="mailto:jkotula@unimax.com">problems</a> to jkotula@unimax.com</address>
</body></html>
