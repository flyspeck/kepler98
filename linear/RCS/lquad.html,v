head	1.1;
access;
symbols;
locks
	hales:1.1; strict;
comment	@# @;


1.1
date	98.05.30.21.03.29;	author hales;	state Exp;
branches;
next	;


desc
@A description of how to take care of the final 18 quad cases.
@


1.1
log
@Initial revision
@
text
@(* output from CPLEX, Sept 16, 1997,
	This uses the revised constants obtained on Sept 15, 1997
	from ineq:part3*.cc.
	Examine the MathToCplex.m log to get details of the changes.
*)
(* list regenerated on 5/26/98 *)
(* sed -f getValues lquad.log > lquad.sum
   Then the first and last lines were modified to make it
    a Mathematica array *)
 
(* Select[lquadsum,#[[1]]>0.4429&] *)

(* all the following data was updated 5/26/98 *)

lquadhi=
  {{0.4771041928699999, 16}, {0.44617409498, 58}, {0.44772557585, 61}, 
   {0.47765565809, 69}, {0.47744657296, 70}, {0.51706652989, 72}, 
   {0.49148097137, 119}, {0.4872006848099999, 121}, {0.46688479548, 124}, 
   {0.5174204451699999, 126}, {0.53083717753, 127}, {0.51219242181, 139}, 
   {0.5067415572599999, 143}, {0.4521663557, 147}, {0.4790955252799999, 157}, 
   {0.4999534889299999, 179}, {0.4851928619099999, 238}, 
   {0.4841244592899999, 351}, {0.44299388947, 1641}, {0.50057775684, 1673}, 
   {0.4429939223799999, 1680}, {0.5067415572599999, 1742}, 
   {0.4429879165, 1748}};

case18 = {16, 58, 61, 69, 70, 72, 119, 121, 124, 126, 127, 139, 143, 147, 
   157, 179, 238, 351};

caselists18 = (* Use this for the first batch of branch and bounds.
		There are 18 lists here with cases corresponding to all the
		various quad clusters. *)
  {{1500, 1501, 1600, 1601, 1700, 1701}, 
   {1500, 1501, 1600, 1601, 1700, 1701}, 
   {1500, 1501, 1600, 1601, 1700, 1701}, 
   {1500, 1501, 1600, 1601, 1700, 1701}, 
   {1500, 1501, 1600, 1601, 1700, 1701}, {1700, 1701, 1800, 1801}, 
   {1300, 1301, 1400, 1401, 1500, 1501, 1600, 1601}, 
   {1500, 1501, 1600, 1601, 1700, 1701}, 
   {1300, 1301, 1400, 1401, 1500, 1501, 1600, 1601}, 
   {1500, 1501, 1600, 1601, 1700, 1701}, {1700, 1701, 1800, 1801}, 
   {1700, 1701, 1800, 1801}, {1700, 1701, 1800, 1801}, 
   {2100, 2101, 2200, 2201}, {1700, 1701, 1800, 1801}, {1900, 1901}, 
   {1700, 1701, 1800, 1801}, {1700, 1701, 1800, 1801}};


(* In the quad branch and bound the following cases failed *)
quadBranchI[72]={1,4,9,12,13};
quadBranchI[119]={1,32,212,224};
quadBranchI[127]={1,3,4,9,11,12,13,15,16};
quadBranchI[179]={1,3,4};
qcase[72]=caselists18[[6]];
qcase[119]=caselists18[[7]];
qcase[127]=caselists18[[11]];
qcase[179]=caselists18[[16]];
BranchQ[n_,i_]:= Branch[qcase[n],quadBranchI[n][[i]]];

(* Branch and bound on the following qrtet faces *)
qrtetBranch[72]={1,2,3,4,5,6,7,11,14,15};
qrtetBranch[119]={1,2,3,4,5,8,9,10,11};
qrtetBranch[127]={1,2,3,4,5,12,13,14,15,16};
qrtetBranch[179]={1,2,3,4,5,6,12,13,14,15}; 
qrtetBranch2[179]={7,9,11,17};
qrtetBranch2[127]={6,7,8,9,10,11};
optA[n_]:= Table[optTextQT[n,i,j],{i,1,Length[quadBranchI[n]]},
	{j,1,2^Length[qrtetBranch[n]]}]//StringJoin;
optTextQT[n_,i_,j_]:= optText["/tmp/cplex8.lp"<>S[n],{BranchQ[n,i],
	Branch[qrtetBranch[n],j]}];
	TextQT[n_,i_,j_]:= 
		{BranchQ[n,i],Branch[qrtetBranch[n],j]}//StringJoin;

optTextQT2[n_,i_,j_,k_]:= optText["/tmp/cplex8.lp"<>S[n],TextQT2[n,i,j,k]];
	TextQT2[n_,i_,j_,k_]:=
		{BranchQ[n,i],Branch[qrtetBranch[n],j],Branch[qrtetBranch2[n],k]};

OpenPut[file_,x_]:= Module[{stream=OpenWrite[file]}, WriteString[stream,x];
			Close[stream]];


(* 72 branch and bound 5 x 1024 = 5120 cases.  Of these, only the
	following are over 0.4429.

	{72, {50, 114, 274, 282, 306, 314, 370, 786}}

	These are all in the first batch of 1024, so we conclude that
		Cqrs1700=0
		Cqrs1701=0
		Cqrs1800=0
		Cqrs1801=0
	So slackVc17=slackVc18=0.A
	The case 50, for example, is the 50th 'read' in cplex72.exec:
		optTextQT[72,1,50];
	bf="/tmp/cplex8.lp72";
	Max[Map[LPmax[bf,StringVar["y",#]]&,{1,2,7,6,3,9,8}]]==2.2360725912;
	{LPmax[bf,"dih{18}9"],LPmax[bf,"dih{17}1"],LPmax[bf,"dih{17}7"]}//Max 
		== 1.9478077111;
	This means we can add the Inequality III.A.4.2. on quad 17. Do this.
	(I edited the file /tmp/cplex8.lp72 to do this. Replace
		slackVc17Dih by 0 slackVc17Dih in two equations. )
	LPmax[bf,"sigsum",TextQT[72,1,50]] == Infeasible (meaning sigsum<0.4429)
	Map[LPmax[bf,"sigsum",TextQT[72,1,#]]&,
		{50, 114, 274, 282, 306, 314, 370, 786}]//
		Union == {Infeasible};
	This finishes 72.

	Revision note.  We could have added the Inequality III.A.4.2 before
	doing the branch and bound.  Then no exceptions to the branch
	and bound would have appeared.  Present it in this opposite order.
	We have such and such an inequality, & with it, the B&B arg works
	w/o exception.

*)

(*
Case 119.  All the values in cplex119.sum (the branch and
	bound on 2048 cases = 4 x 512) are less than 0.4429.  So
	this case is done.

*)

(* case 179.
	The values in cplex119.sum (the branch and bound on
		3 x 1024 cases) over 0.4429 are between 1 and 2 1024.
	These are BranchQ[179,1]
		Cqrs1900=0
		Cqrs1901=0
	and BranchQ[179,2]
		Cqrs1900=0
		Cqrl1901=0.

	bf = "/tmp/cplex8.lp179";
	LPmax[bf,"dih{19}1"]== 1.9514175406
	LPmax[bf,"dih{19}7"]== 1.9514175406

	Table[LPmax[bf,StringVar["y",i]],{i,1,12}]==
	  {2.096042017699999, 2.140463299599999, 2.081154849699999, 
   2.075541349599999, 2.081154661799999, 2.140463299599999, 
   2.096042017699999, 2.0811546641, 2.073502172199999, 2.0735021745, 
   2.0811546376, 2.075541349599999};
	Only y(2) and y(6) are over 2.13. All are under 2.26,
		so we can set coeff of slackVc19Dih in two of the equations.
		(I did this with a text editor.)

	LPmax[bf,"y(2)",BranchQ[179,2]]==2.1071892794,
	LPmax[bf,"y(6)",BranchQ[179,2]]==2.1071892794,
		All heights are under 2.13,
		so we can impose ht213=0 on the BranchQ[179,2] cases.
		(I did this with a text editor.)
	ww = Select[Range[1025,2 1024],values[[#,1]]>0.4429&]-1024;
	Text179QT2[n_,i_]:= {BranchQ[n,2],Branch[qrtetBranch[n],i]}//StringJoin;
	do[j_]:= LPmax[bf,"sigsum",Text179QT2[179,ww[[j]]]];
	Array[do,Length[ww]]//Union == {Infeasible};
	So we are done with BranchQ[179,2].
	


	(* go to work on BranchQ[179,1] *)
	(* I added a third "add" argument to UpdateFace *)
	uf19=UpdateFace[bf,19 ,BranchQ[179,1]] 

	LPmax[bf,"y(2)",StringJoin[uf19,BranchQ[179,1]]]==2.1396247105.
		This is not good enough.
		We need to take more drastic measures.
	ww = Select[Range[1024],values[[#,1]]>0.4429&];
	Map[(Print[#];LPmax[bf,"y(2)",StringJoin[TextQT[179,1,#],uf19]])&,ww]//Max
		== 2.0544041714;
	Map[(Print[#];LPmax[bf,"y(6)",StringJoin[TextQT[179,1,#],uf19]])&,ww]//Max
		== 2.0544041714;
	So we can impose ht213=0 on the BranchQ[179,1] cases.
		(Add this constraint with the text editor to /tmp/cplex8.lp179 )
	Length[ww]==320. So add 3 more faces to the Branch and bound.

	optA179:= Table[optTextQT2[179,1,ww[[j]],k],
		{j,1,Length[ww]},{k,1,2^Length[qrtetBranch2[179]]}]//StringJoin;
	optA179unravel[i_]:= Module[{r=2^Length[qrtetBranch2[179]]},
		{179,1,
		ww[[1+Floor[(i-1)/r ] ]],
		1+Mod[i-1,r]}];
	ww179a is the list that are still over 0.4429, even with this
		second branch and bound: << cplex179a.sum; ww179a=Select[Range...
	slackN=0 gives a new experimental equation.
	LPv[i_]:= Module[{r},
		r = TextQT2 @@@@ optA179unravel[i];
		LPmax[bf,"sigsum",StringJoin["slackN=0\n",r]]
		];
	r179a= Map[(Print[#]; LPv[#])&,ww179a]//Union == {Infeasible}; 
	This completes case 179 (assuming the slackN=0 equation holds).

	
	*)

(* Case 127,

	bf = "/tmp/cplex8.lp127"
	LPmax[bf,"y(1)"] == 2.131084094;
	LPmax[bf,"y(6)"] == 2.1688426843;
	LPmax[bf,"y(7)"] == 2.2540084848;
	LPmax[bf,"y(2)"] == 2.2540073726;
	LPmax[bf,"y(8)"] == 2.1688423817
	LPmax[bf,"y(9)"] == 2.131083419;
	LPmax[bf,"dih{17}1"] == 1.9133266289;
	LPmax[bf,"dih{17}7"] == 2.0904481761;
	LPmax[bf,"dih{18}2"] == 2.0904481761;
	LPmax[bf,"dih{18}9"] == 1.9133266289;
	So we can add the new experimental inequality
		vorA+0.419351 sol < 0.3072 if y1,y2,y3<2.26 and dih<2.12.
	at faces 17 and 18.  It should have slackVc17 and slackVc18.

	sigma{17}1+0.419351 solid{17}1-slackVc17-slackN < 0.3072
	sigma{17}7+0.419351 solid{17}7-slackVc17-slackN < 0.3072
	sigma{18}2+0.419351 solid{18}2-slackVc18-slackN < 0.3072
	sigma{18}9+0.419351 solid{18}9-slackVc18-slackN < 0.3072

	Also set coefficients of two slackVc17Dih and two slackVc18Dih to 0.
	(done with text editor).


	<< cplex127.sum;
	c127 = values;
	c127hi = Select[Range[Length[c127]],c127[[#,1]]>0.4429&]; (* 227 cases *)
	1+(c127hi/1024//Floor//Union) == {1, 2, 3, 4, 7}
	optA127unravel[i_]:= Module[{r=2^Length[qrtetBranch[127]]},
		{127,1+Floor[i/r],1+Mod[i-1,r]}];
	LP127[i_]:= Module[{r,v},
		r = TextQT @@@@ optA127unravel[i];
		Print[r];
		v=LPmax[bf,"sigsum",StringJoin["slackN=0\n",r]];
		Print["max = ",v];
		v
		];
	r127= Map[(Print[#]; LP127[#])&,c127hi] ;
	Infeasible=0;
	cc127hi = c127hi[[Select[Range[Length[r127]],r127[[#]]>0.4429&]]] 
	(* The numbers left are all less than 1024 *)

	set slackN=0 in the cplex file.
	f[i_,j_]:= LPmax[bf,StringVar["y",i],TextQT[127,1,j]];
	hts[j_]:= Array[f[#,j]&,12]//Max	;
	allhts=Map[hts,cc127hi];
	allhts//Max == 2.0835367658;
	So we can impose ht213=0 (done with a text editor).
	

	optA127:= Table[optTextQT2[127,1,cc127hi[[j]],k],
		{j,1,Length[cc127hi]},{k,1,2^Length[qrtetBranch2[127]]}]//StringJoin;
	OpenPut["/tmp/cplex127a.exec",vv=optA127];
	// run cplex << cplex127a.sum
	d127a = values; 
	dd127a = Select[Length[d127a]//Range,d127a[[#,1]]>0.4429&];
	// note: dd127a= 1+ 64 {0, 1, 2, 3, 4, 5, 6, 8, 9, 12};
	// So k=1 in all the case of optA127.
	

*)

@
